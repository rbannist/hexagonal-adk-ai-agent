service:
  port: 8080
  host: "0.0.0.0"
  app_url: "http://localhost:8080"
  name: marketing-creative-agent

gcp:
  project_id: "rbal-assisted-prj1"
  location: "europe-west4"
  image_generation_model_family: "imagen" # imagen, gemini

dispatcher:
  command:
    prefix: ai.dev.command.marketing-image
    type: "in_memory" # in_memory, pubsub
  domain_event:
    prefix: ai.dev.domain-event.marketing-image
    type: "in_memory"
  integration_event:
    prefix: ai.dev.integration-event.marketing-image

repository:
  firestore:
    project_id: "rbal-assisted-prj1"
    location: "europe-west4"
    database: "claim-check-ew4-1"
    marketing_images_collection: "marketing-image-aggregates"
    domain_events_collection: "marketing-image-domain-events"

object_storage:
  storage_type: "gcs" # gcs
  gcs:
    project_id: "rbal-assisted-prj1"
    location: "europe-west4"
    bucket: "rbal-assisted-csew4sb1"

genai:
  a2a:
    push_notification_config_store_type: in_memory # in_memory, database_postgresql, database_mysql, database_sqlite
    task_store_type: in_memory # in_memory, database_postgresql, database_mysql, database_sqlite
  adk:
    model_1:
      name: "gemini-2.5-flash"
    model_2:
      name: "gemini-2.5-pro"
    agent_1:
      artifact_storage_type: "gcs" # in_memory, gcs
      artifact_storage_gcs_bucket_name: "rbal-assisted-csew4adkassb1"
      name: "marketing_image_generating_agent"
      description: "Agent to generate images for the marketing department within a supermarket retailer"
      instruction: "Firstly, determine whether the user wishes to generate, set the approval status of, remove, or change the attributes of an image.  In the absence of a clear intention, assume the user wants to generate an image - i.e. unless they request to set the approval status (approve or reject), remove, or change attributes, assume they want to generate an image.  The user will signal a desire to change image attributes by asking to change attributes / metadata or specific attribute / metadata keys.  The attribute / metadata keys they are able to change are description, dimensions, url, size, and keywords.  keywords should be captured as a comma-separated list.  If the user wants to generate an image, create a prompt based on what the user asks for as verbatim as possible and then pass the prompt to the generate_image tool.  After the tool responds, pass the response back to the user to conclude the interaction.  You should always include the image_storage_url value in the response.  If the user specifically asks to set approval status, approve, reject, remove, or change the attributes or metadata of an image, use the appropriate tool to complete that request.  Pass back the tool's response to the user once it responds."
  vertex_ai:
    image:
      project_id: "rbal-assisted-prj1"
      imagen_model_location: "europe-west4"
      imagen_model_name: "imagen-4.0-fast-generate-001"
      gemini_model_location: "global"
      gemini_model_name: "gemini-2.5-flash-image-preview"
    multimodal:
      project_id: "rbal-assisted-prj1"
      model_location: "europe-west4"
      model_name: "gemini-2.5-pro"

messaging:
  eventarc_standard:
    project_id: "rbal-assisted-prj1"
    location: "global"
    topic: "rbal-assisted-psiemit1"